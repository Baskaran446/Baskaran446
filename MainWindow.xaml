<Window x:Class="ToDoListApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToDoListApp"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <local:BitmapImageConverter x:Key="BitmapImageConverter" />
        <Style TargetType="Button" x:Key="PaintButton">
            <Setter Property="Width" Value="25"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Border x:Name="Bd" BorderThickness="0"  BorderBrush="Black">
                                <ContentPresenter Content="{TemplateBinding Button.Content}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="LightSkyBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Image x:Key="EditIcon" Width="25" Height="25" Source="..\ToDoListApp\Image\Edit_Icon.png" />
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListViewStyle1" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0 0 3 0"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Border BorderBrush="Black" BorderThickness="1" Padding="5">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                        <Grid>
                            <Ellipse Fill="Red" Stroke="Red" Width="12" Height="12" />
                        </Grid>
                        <TextBlock Margin="5 0 0 0" Text="TODO APP" />
                    </StackPanel>
                    <ComboBox Grid.Column="2" Width="100" ItemsSource="{Binding DataModel.Languages,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                              SelectedItem="{Binding DataModel.SelectedLanguage,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SelectionChangeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
                <Grid Grid.Row="1" Margin="0 5 0 0" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*" MinWidth="180"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0" VerticalAlignment="Center">
                        <StackPanel>
                            <TextBlock Text="Items" FontWeight="Bold" />
                            <Line X1="0" Y1="2" X2="15" Y2="2" Stroke="Black" StrokeThickness="1"/>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="2">
                        <Button  Background="LightGreen" Width="65" Foreground="White" Padding="5" Command="{Binding ButtonCommand}" CommandParameter="AddNewItem">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Path Stretch="Fill" Width="10" Height="10" StrokeThickness="0" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Path=Foreground}"   
                                          Data="M4.1561281,2.2702953 L4.8524521,2.2702954 4.8509674,3.963097 5.8969377,3.9630803 5.8969378,5.0916036 4.8524628,5.1061913 4.8524521,6.7843885 4.1561281,6.7843887 4.1559771,5.0877741 3.1116421,5.0916036 3.1116421,3.9630803 4.1556735,3.9654722 4.1561281,2.2702953 z"/>
                                    <TextBlock Margin="5 -2 0 0" Text="New" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
                        <ListView Style="{DynamicResource ListViewStyle1}" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  Height="190"
                                  ItemsSource="{Binding DataModel.Items,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border x:Name="Bd" BorderBrush="Black" BorderThickness="0 0 0 1" Background="Transparent" Margin="0 5">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid Grid.Column="0" VerticalAlignment="Center" Margin="5 0 0 0">
                                                            <CheckBox x:Name="Part_Checkbox" IsChecked="{Binding IsChecked,UpdateSourceTrigger=PropertyChanged}">
                                                                <CheckBox.Content>
                                                                    <Grid>
                                                                        <TextBlock Margin="8 0 0 0" Text="{Binding ItemName,UpdateSourceTrigger=PropertyChanged}" />
                                                                        <Grid>
                                                                            <Grid.Style>
                                                                                <Style TargetType="Grid">
                                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger Binding="{Binding ElementName=Part_Checkbox,Path=IsChecked}" Value="True">
                                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Grid.Style>
                                                                            <Line Stroke="Black" X1="0" Y1="2" X2="80" Y2="2" VerticalAlignment="Center" StrokeThickness="1"  />
                                                                        </Grid>
                                                                    </Grid>
                                                                </CheckBox.Content>
                                                            </CheckBox>
                                                        </Grid>
                                                        <Grid Grid.Column="1">
                                                            <Label>
                                                                <Label.Content>
                                                                    <Grid>
                                                                        <Grid.Style>
                                                                            <Style TargetType="Grid">
                                                                                <Setter Property="Visibility" Value="Visible" />
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding SelectedLabel,UpdateSourceTrigger=PropertyChanged}" Value="None">
                                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Grid.Style>
                                                                        <Ellipse Height="15" Width="100" Fill="Lime" StrokeThickness="0" />
                                                                        <TextBlock Text="{Binding SelectedLabel,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                                    </Grid>
                                                                </Label.Content>
                                                            </Label>
                                                        </Grid>
                                                        <Grid Grid.Column="2">
                                                            <StackPanel>
                                                                <StackPanel.Style>
                                                                    <Style TargetType="StackPanel">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ElementName=Part_Checkbox,Path=IsChecked}" Value="True">
                                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </StackPanel.Style>
                                                                <Button Command="{Binding Path=DataContext.ButtonCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" ToolTip="Edit"  
                                                                        CommandParameter="{Binding Path=DataContext,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListViewItem}}}"
                                                                        Background="Transparent" Style="{StaticResource PaintButton}">
                                                                    <Image Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window},Path=DataContext.EditIcon,Converter={StaticResource BitmapImageConverter}}" />
                                                                </Button>
                                                            </StackPanel>
                                                            <StackPanel>
                                                                <StackPanel.Style>
                                                                    <Style TargetType="StackPanel">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ElementName=Part_Checkbox,Path=IsChecked}" Value="True">
                                                                                <Setter Property="Visibility" Value="Visible" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </StackPanel.Style>
                                                                <Button Command="{Binding Path=DataContext.ButtonCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" 
                                                                        ToolTip="Delete"  Style="{StaticResource PaintButton}"
                                                                        CommandParameter="{Binding Path=DataContext,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListViewItem}}}">
                                                                    <Image Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window},Path=DataContext.DeleteIcon,Converter={StaticResource BitmapImageConverter}}" />
                                                                </Button>
                                                            </StackPanel>
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
